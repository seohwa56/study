chapter 04

4.1 변수란 무었인가? 왜 필요한가?

변수란 프로그래밍 언어에서 데이터를 관리하기 위한 핵심개념이다

예를 들어 10+20을 컴퓨터에 이해시켜보자

사람과 같이 10,20 이 무엇인지 알고 있어야하며 + 의 의미를 알고있어야한다 이를 저정할 공간이 필요하다
이 공간을 메모리라고 하며 메모리에 저장된 값은 전부 2진수로 저장된다
메모리에 접근하기 위해서는 메모리주소가 필요하며 메모리 주소는 16진수로 이루어져 있다(0xFFFFFFFF)
연산결과 재사용을 위해 메모리주소에 직접 접근하는것은 매우 치명적인 오류를 발생 시킬수 있다

프로그래밍 언어는 기억하고 싶은 값을 메모리에 저장하고, 저장 된 값을 읽어 들여 재사용하기해 변수라는 매커니즘을 제공한다 
따라서 변수는 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 구분하기 위해 붙인 이름을 말한다. -> 값의 이름을 식별

변수의 저장된 값을 변수값이라고 하며 변수에 값을 저장하는것을 할당(대입,저장)이라고 하며 변수에 저장된 값을 읽어들이는 것을 참조라고 한다.

4.2 식별자

어떠한 값을 구별해서 식별할 수있는 고유한 이름
식별자 어떤값이 저장되어 있는 메모리 주소를 기억(저장) 해야 한다 식별자는 값이 저장되어있는 메모리 주소와 매핑 관계를 맺으며, 이 매핑정보도 메모리에 저장되어야한다
메모리상에 존재하는 어떤 값을 식별할수 있는 이름을 모두 식별자라고 부른다
변수,함수,클래스 등 네이밍 규칙을 준수하고 선언에 의해 식별자의 존재를 알린다

4.3 변수선언

변수선언은 변수를 생성하는것을 말한다. 값을 저장하기 위한 메모리 공간을 확보하고 변수이름과 메모리주소를 연결해서 값을 저장할수 있게 준비한다
변수를 선언할때는 var, let, const 를 사용한다

변수선언
변수를 선언하고 메모리 공간을 확보한다 확보된 공간은 undefined라는 값이 암묵적으로 초기화 된다 undefined는 자바스크립트에서 제공하는 원시타입의 값이다

변수선언의 2단계
선언단계 : 변수 이름을 등록해서 자바스크립트 엔진에 변수의 존재를 알린다
초기화단계 : 값을 저장하기 위한 메모리 공간을 확보하고 암묵적으로 undefined를 할당해 초기화한다
변수이름을 포함한 모든 식별자는 실행 컨텍스트에 저장된다. 실행 컨텍스트는 소스코드를 평가하고 실행하기 위해 환경을 제공하고 결과를 관리하는 영역으로 
식별자와 스코프를 관리한다

4.4 변수 선언의 실행 시점과 변수 호이스팅

consol.log(score); // undefined
var score // 변수 선언문
위의 변수에서 참조에러가 아닌 undefined가 출력된다
변수선언이 소스코드를 한줄씩 순차적으로 실행되느니 시점인 런타임이 아닌 그 이전단계부터 실행되기 때문이다
변수선언문이 코드의 선두로 끌어 올려진 것처럼 동작하는것을 변수 호이스팅이라고 한다

4.5 값의 할당

변수에 값을 할당(대입,저장) 할때 할당연산자 = 를 사용한다

var score = 80 // 변수선언과 값의 할당
변수선언은 하나의 문으로 단축할수 있다

변수 선언은 소스코드가 순차적으로 실행되는 시점인 런타임 이전에 먼저 실행
값의 할당은 소스코드가 순차적으로 실행되는 시점인 런타임에 실행

4.6 값의 재할당

재할당이란 이미 값이 있는 변수에 새로운 값을 할당하는것이다
var 키워드로 선언한 변수를 재할당할수 있으며 var 키워드로 선언한 변수는 동시에 undefined로 초기화 되기 때문에 엄밀히 말하자면 변수에 처음 값을 할당하는것도 재할당이다
값을 재할당 할수 없다면 변수가 아니라 상수(constant)라고 한다 상수는 단한번만 할당할수 있는 변수다
재할당을 위해 새로운 메모리공간을 확보하며 더이상 사용되지 않는 메모리란 어떤 식별자도 참조하지 않는 메모리공간을 의미하며 가비지콜렉터를 통해 메모리 누수를 방지한다

가비지콜렉터
애플리케이션이 할당한 메모리 공간을 주기적으로 검사하여 더이상 사용되지 않는 메모리를 해제하는 기능

언매니지드 언어와 매니지드 언어

언매니지드 언어
개발자가 메모리를 항당하고 해제하기 위해 malloc() 과 free() 같은 저수준 메모리 제어기능을 제공
메모리 제어를 개발자가 주도할 수 있으므로 개발자의 역량에 따라 최적의 성능을 확보할수 있지만 치명적인 오류를 생산할 가능성도 있다

매니지드 언어

메모리의 할당 및 해제를 위한 관리기능을 언어차원에서 담당하고 개발자의 직접적인 제어를 혀용하지 않는다
개발자의 역량에  의존하는 부분이 상대적으로 적기때문에 일정한 생산성 확보에 좋다는 장점이 있지만 성능면에서 어느정도 손실은 감수해야된다

4.7 식별자 네이밍 규칙

식별자는 특수문자를 제외한 문자, 숫자, 언더스코어(_), 달러($)를 포함한다
식별자는 특수문자를 제외한 문자, 숫자, 언더스코어(_), 달러($)로 시작해야한다. 숫자로 시작하는것은 허용하지 않는다.
예약어는 식별자로 사용 할 수 없다.
변수이름은 변수의 존재목적을 쉽게 이해할수 있도록 의미를 명확히 표현해야한다

네이밍 컨벤션
가독성을 위해 규정한 규칙

카멜케이스(firstName)
스네이크 케이스(first_name)
파스칼 케이스(FirstName)
헝가리안 케이스

가독성을 위해 카멜케이스나 파스칼케이스를 사용하는게 좋다






