chapter 02

2.1 자바스크립트의 탄생

1995년 넷스케이프 커뮤니케이션즈는 브라우저에서 동작하는 경량프로그래밍 언어를 도입 -> 브렌던 아이크의 자바스크립트
1996년 넷스케이프 내비게이터2에 탑재 모카라고 이름지음 후에 9월 라이브스크립트를 걸쳐 12월 자바스크립트로 이름 최종확정

2.2 자바스크립트의 표준화

1996년8월 마이크로소프트 자바스크립트의 파생본인 j스크립트를 인터넷 익스플로러에 탑재
j스크립트와 자바스크립트 표준화 되지 않은채 적당히 호환 -> 브라우저에 따라 웹페이지가 정상적으로 작동하지 않는 크로스 브라우징 이슈발생
결과적으로 모든 브라우저에서 작동하는 웹페이지 만들기 어려워짐

1996년 11월 넷스케이프 커뮤니케이션즈는 컴퓨터 시스템에 표준을 관리하는 비영리단체 ECMA 인터내셔널에 표준화 요청
1997년 7월 표준화된 자바스크립트 초판(ECMA스크립트1) 탄생

2.3 자바스크립트 성장의 역사
초창기 자바스크립트는 웹페이지의 보조적으로 사용됨 -> 대부분 로직은 웹서버에서 실행 -> 브라우저는 서버로부터 받은 html과 css를 렌더링함

렌더링
html, css, 자바스크립트로 작성된 문서를 해석해서 브라우저에 시각적으로 보여주는것

2.3.1 Ajax

1999년 자바스크립트를 이용해 서버와 브라우저가 비동기방식으로 데이터를 교환할수 있는 통신기능인 Ajax 등장

기존방식
html 코드를 서버에서 전송받아 웹페이지 전체를 렌더링 -> 화면전환되면 새로운 html을 전송받아 렌더링함
단점 -> 불필요한 데이터 통신발생/성능면에서 불리함

Ajax
웹페이지에서 변경할 필요가 없는 부분을 다시 렌더링 하지 않고 서버에서 필요한 데이터만 전송받아 필요한 부분만 렌더링
장점 -> 브라우저에서 데스크톱 애플리케이션과 유사한 빠른 성능과 부드러운 화면전환 가능

2005 자바스크립트 는 구글맵스로 웹 어플리게이션 프로그래밍언어로 가능성 확인

2.3.2 jQuery

2006년 jQuery의 등장으로 DOM을 쉽게 제어 가능해짐 -> 크로스 브라우징 이슈 해결(어느정도)

2.3.3 구글 V8 자바스크립트 엔진

자바스크립트로 웹 애플리케이션 구축시도 늘어남 -> 엔진의 필요성느낌
V8 엔진 등장 -> 데스크톱 애플리케이션과 유사한 사용자경험을 제공할수 있는 프로그래밍 언어로 정착
웹서버에서 수행되던 로직들이 대거 브라우저로 이동-> 웹 애플리게이션 개발에서 프론트엔드 영역이 주목받는 계기로 작용

2.3.4 Node.js

2009년 라이언 달 Node.js -> 구글 V8 자바스크립트 엔진 기반 런타임 환경
Node.js는 브라우저의 자바스크립트 엔진에서만 동작하는 자바스크립트를 브라우저 이외의 환경에서도 동작하게함
다양한 플랫폼에 적용할수 있지만 서버사이드 애플리케이선 개발에 주로 사용되며 필요한 모듈,파일 시스템,http등 빌트인 API 제공
Node.js 기반은 자바스크립트, 비동기 I/O 지원 단일스레드 이벤트루프 기반으로 동작 -> 요청처리성능이 좋음
데이터를 실시간으로 처리하는 SPA에 적합 CPU 사용률이 높은 애플리케이션에서는 권장하지 않음

2.3.5 SPA 프레임 워크

모던 웹 애플리케이션은 데스크톱 애플리케션만큼 성능과 사용자 경험을 제공하는것이 필수 -> 난이도 상승
필요에 따라 다양한 패턴과 라이브러리 등장 -> 도움은 됬지만 변경에 유연하고 확장이 쉬운 어플리케이션 아키텍처 구축이 어려워짐
-> 프레임워크 등장 -> CBD 방법론 기반 SPA가 대중화됨

2.4 자바스크립트와 ECMA스크립트

프로그래밍 언어의 값, 타입, 객체와 프로퍼티, 함수, 표준 빌트인 객체 등 핵심문법 규정

뼈대 -> ECMA스크립트
프로그래밍언어 -> 자바스크립트

2.5 자바스크립트의 특징

html,css와 함께 웹을 구성하는 요소중 하나 -> 웹 브라우저에서 동작하는 유일한 프로그래밍 언어
개발자가 별도의 컴파일 작업을 하지 않는 인터프리터 언어

인터프리터
소스코드를 즉시 실행 -> 컴파일러는 빠르게 동작하는 머신코드를 생성,최적화 -> 빠르게 코드실행

명령형, 함수형,프로토타입 기반 객체지향 프로그래밍 지원 -> 멀티패러다임 프로그래밍 언어
클래스 기반 객체지향언어보다 효율적이고 강렬한 프로토타입 기반 객체지향언어

2.6 ES6 브라우저 지원현황

대부분 지원하나 인터넷익스플로러나 구형브라우저는 지원안함
최신기능을 사용하거나 인터넷익스플로러나 구형브라우저를 사용해야하는 경우 바벨과 같은 트랜스파일러를 사용 -> 소스코드를 다운그레이드 해야함



