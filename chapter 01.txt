chapter 01 
=====================

## 1.1 프로그래밍이란

컴퓨터에게 실행을 요구하는 커뮤니케이션으로 컴퓨터에게 **무엇을 실행시키고 싶은지 정의**할 필요가 있다. 따라서 **해결해야할 문제(요구사항)를 명확히 이해**해야한다. 
이때 문제를 해결하기 위해 요구 되는것이 **문제 해결능력**이다. 문제 해결 능력을 기르기 위해서는 알고리즘 학습이 큰 도움이 되지만 문제 해결을 위한 만능은 아니다. 
대부분의 문제는 복잡하고 명확하지 않을수 있으며 이를 명확히 이해하는 것이 최우선이고 **복잡함을 단순하게 해석하는 능력과 자료를 정리하고 구분할 줄 
알아야하며 순서에 맞게 배열**해야한다.

**프로그래밍**이란 0과1로 이루어진 기계에게 **정확하고 상세하게 요구사항을 설명하는 작업**으로 이 작업을 실행시키는게 바로 코드다.
문제해결을 위한 방법을 고려할때 중요한것은 **컴퓨팅사고**이다. 문제해결 능력은 직감과 직관의 영역으로 문제를 바라보는 사고와 경험에 영향을 받는다.  
사람의 사고방식은 매우 포괄적이며 익숙한 사항에 대해서 당연하게 생각하는 인식이 있다. 사람은 소리를 “크다” 나 “작다”로 표현한다 이는 컴퓨터에게 숫자나 세거나 
잴 수 있는 분량이나 수량과 관계된 것 처럼 계산이 가능한 “현재 볼륨보다 1단계 크게 조정해라” or “볼륨 60으로 조정해라” 등으로 명령해야한다.  
또한 컴퓨터에게 “붉다”, “사랑” 같은 관념적 개념은 매우 난해하므로 이를 컴퓨터의 관점에서 문제를 생각해야한다.

## 1.2 프로그래밍 언어

명령을 수행하는 주체는 컴퓨터로 사람이 이해할 수 있는 언어인 기계어로 명령을 전달해야한다. 그러나 사람이 기계어로 직접 명령을 전달하는 것은 매우 어려운 일로
이것을 대신할 대안으로 사람이 이해할수 있는 약속된 구문(문법)으로 작성된 프로그래밍 언어를 사용하는 것이다.
프로그래밍 언어로 작성된것을 컴퓨터가 이해할수 있는 기계어로 변환하는 이 번역기를 컴파일러 혹은 인터프리터라고 한다.

언어는 자신의 생각을 상대에게 전달하는 방법으로 언어에는 자연어와 인공어로 구분할 수 있다.
프로그래밍 언어란 컴퓨터와의 대화(명령)에 사용되는 표현수단으로 사람과 컴퓨터 모두가 이해할수 있는 약속된 형태의 인공어다.

EX)
hello world 출력하기

console.log('hello world');

프로그래밍은 프로그래밍 언어를 사용해 컴퓨터에게 실행을 요구하는 커뮤니케이션이다. 프로그래밍 언어는 구문과 의미로 조합되서 표현된다.


## 1.3 구문과 의미

프로그래밍 언어를 문법에 맞는 문장을 구성하는것과 의미를 가지고 있어야 언어의 역활을 충실히 수행할 수 있다.

EX)
const number = "string";
console.log(number * number); // NaN

자바스크립트 변수에는 어떠한 타입의 값도 할당 할수 있다. 위 예제에서 문법상 문제가 없지만 number라는 이름의 변수에 문자열이 할당되어있기 때문에 의미가 없다.
number라는 이름의 변수에는 숫자를 넣는것이 옳다. 이 문제의 해결 방안으로 프로그래밍 언어의 문법을 사용해야한다. 이렇게 만들어진 코드는 구체적인 구현물이며.
이는 요구사항의 실현(문제해결)의 의미를 가지고있다.

프로그래밍 언어가 제공하는 문법을 적절히 사용하여 변수값을 저장,참조하고 연산자로 값을 연산,평가하고, 조건문과 반복문을 사용한 흐름제어로 코드실행 순서를 제어,
함수로 재사용 가능한 문의 집합으로 만들고 객체,배열등 자료를 구조화한다.

프로그래밍은 요구사항의 집합을 분석해서 적절한 자료구조와 함수의 집합으로 변환한 뒤, 그 흐름을 제어하는것이다.



